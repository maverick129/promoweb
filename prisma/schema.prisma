// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  phone     String
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  winners   Winner[]
  locationData Location?
  promoCodes PromoCode[]
}

model PromoCode {
  id        String   @id @default(uuid())
  code      String   @unique
  used      Boolean  @default(false)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  winner    Winner?
}

model Prize {
  id          String   @id @default(cuid())
  name        String
  description String
  type        String   // "instant" or "raffle"
  value       String?
  quantity    Int      @default(1)
  probability Float    @default(0)
  remaining   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  winners     Winner[]
  wins        Win[]
}

model Winner {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  prizeId   String
  prize     Prize    @relation(fields: [prizeId], references: [id])
  codeId    String   @unique
  code      PromoCode @relation(fields: [codeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Win {
  id        String   @id @default(cuid())
  prizeId   String
  prize     Prize    @relation(fields: [prizeId], references: [id])
  claimed   Boolean  @default(false)
  claimedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        String   @id @default(uuid())
  lat       Float
  lng       Float
  address   String
  city      String
  province  String
  userId    String?  @unique
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OTP {
  id        String   @id @default(uuid())
  phone     String
  code      String
  attempts  Int      @default(0)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([phone])
  @@index([expiresAt])
} 